generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DAO {
  id             String  @id @default(cuid())
  walletAddress  String
  title          String
  description    String
  fundTicker     String?
  twitterHandle  String?
  telegramHandle String?
  telegramGroup  String?
  poc            String?
  poster         String?

  treasuryAddress String? @unique
  daoCoinAddress  String? @unique

  fundingStarts DateTime?
  fundingEnds   DateTime?

  tradingStartsAt DateTime?
  tradingEndsAt   DateTime?

  comments Comment[]

  createdAt DateTime @default(now())

  founder User @relation(fields: [walletAddress], references: [walletAddress])
}

model Like {
  id        String   @id @default(cuid())
  userId    String
  commentId String
  createdAt DateTime @default(now())
  Comment   Comment  @relation(fields: [commentId], references: [id])
}

model Comment {
  id      String @id @default(cuid())
  comment String
  name    String
  userId  String // TWITTER ID
  image   String // User Image

  daoId String

  likes     Like[]
  createdAt DateTime @default(now())

  DAO DAO? @relation(fields: [daoId], references: [id])
}

model User {
  id            String       @id @default(cuid())
  walletAddress String       @unique
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  daos          DAO[]
  InviteCode    InviteCode[] // ONLY ADMIN CAN CREATE INVITE CODES
  role          Role         @default(USER)
}

model InviteCode {
  id        String   @id @default(cuid())
  code      String   @unique
  userId    String?  @unique // IF USER IS NULL, THEN IT IS NOT USED
  expiresAt DateTime
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

enum Role {
  ADMIN
  USER
}
